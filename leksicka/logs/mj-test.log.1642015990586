INFO  20:32:22,672 - Compiling source file: C:\Users\Jovan\Desktop\compilers\materijali\Leksicka_analiza\workspace\leksicka\test\program.mj
INFO  20:32:22,788 - #2 program
INFO  20:32:22,788 - #49 p
INFO  20:32:22,788 - #14 const
INFO  20:32:22,789 - #49 int
INFO  20:32:22,790 - #49 size
INFO  20:32:22,791 - #6 =
INFO  20:32:22,791 - #47 10
INFO  20:32:22,792 - #8 ;
INFO  20:32:22,795 - #41 class
INFO  20:32:22,797 - #49 Table
INFO  20:32:22,797 - #11 {
INFO  20:32:22,799 - #49 int
INFO  20:32:22,800 - #49 pos
INFO  20:32:22,800 - #38 [
INFO  20:32:22,800 - #39 ]
INFO  20:32:22,801 - #7 ,
INFO  20:32:22,802 - #49 neg
INFO  20:32:22,802 - #38 [
INFO  20:32:22,802 - #39 ]
INFO  20:32:22,802 - #8 ;
INFO  20:32:22,803 - #11 {
INFO  20:32:22,808 - #13 void
INFO  20:32:22,808 - #49 putp
INFO  20:32:22,809 - #9 (
INFO  20:32:22,809 - #49 int
INFO  20:32:22,809 - #49 a
INFO  20:32:22,809 - #7 ,
INFO  20:32:22,810 - #49 int
INFO  20:32:22,810 - #49 idx
INFO  20:32:22,810 - #10 )
INFO  20:32:22,811 - #11 {
INFO  20:32:22,811 - #49 this
INFO  20:32:22,812 - #43 .
INFO  20:32:22,813 - #49 pos
INFO  20:32:22,813 - #38 [
INFO  20:32:22,813 - #49 idx
INFO  20:32:22,813 - #39 ]
INFO  20:32:22,814 - #43 .
INFO  20:32:22,814 - #6 =
ERROR 20:32:22,814 - 
Sintaksna greska na liniji 6
INFO  20:32:22,815 - #49 a
INFO  20:32:22,815 - #8 ;
INFO  20:32:22,815 - #12 }
INFO  20:32:22,816 - #13 void
INFO  20:32:22,816 - #49 putn
INFO  20:32:22,816 - #9 (
INFO  20:32:22,816 - #49 int
INFO  20:32:22,816 - #49 a
INFO  20:32:22,816 - #7 ,
INFO  20:32:22,816 - #49 int
INFO  20:32:22,817 - #49 idx
INFO  20:32:22,817 - #10 )
INFO  20:32:22,817 - #11 {
INFO  20:32:22,817 - #49 this
INFO  20:32:22,817 - #43 .
INFO  20:32:22,817 - #49 neg
INFO  20:32:22,817 - #38 [
INFO  20:32:22,817 - #49 idx
INFO  20:32:22,817 - #39 ]
INFO  20:32:22,818 - #6 =
INFO  20:32:22,818 - #49 a
INFO  20:32:22,818 - #8 ;
INFO  20:32:22,818 - #12 }
INFO  20:32:22,818 - #49 int
INFO  20:32:22,818 - #49 getp
INFO  20:32:22,818 - #9 (
INFO  20:32:22,819 - #49 int
INFO  20:32:22,819 - #49 idx
INFO  20:32:22,819 - #10 )
INFO  20:32:22,819 - #11 {
INFO  20:32:22,819 - #4 return
INFO  20:32:22,819 - #49 pos
INFO  20:32:22,819 - #38 [
INFO  20:32:22,819 - #49 idx
INFO  20:32:22,820 - #39 ]
INFO  20:32:22,820 - #8 ;
INFO  20:32:22,820 - #12 }
INFO  20:32:22,820 - #49 int
INFO  20:32:22,820 - #49 getn
INFO  20:32:22,820 - #9 (
INFO  20:32:22,820 - #49 int
INFO  20:32:22,820 - #49 idx
INFO  20:32:22,820 - #10 )
INFO  20:32:22,820 - #11 {
INFO  20:32:22,821 - #4 return
INFO  20:32:22,821 - #49 neg
INFO  20:32:22,821 - #38 [
INFO  20:32:22,821 - #49 idx
INFO  20:32:22,821 - #39 ]
INFO  20:32:22,821 - #8 ;
INFO  20:32:22,821 - #12 }
INFO  20:32:22,822 - #12 }
INFO  20:32:22,822 - #12 }
INFO  20:32:22,822 - #50 record
INFO  20:32:22,822 - #49 Board
INFO  20:32:22,822 - #11 {
INFO  20:32:22,822 - #49 int
INFO  20:32:22,822 - #49 rows
INFO  20:32:22,822 - #7 ,
INFO  20:32:22,822 - #49 columns
INFO  20:32:22,823 - #8 ;
INFO  20:32:22,823 - #12 }
ERROR 20:32:22,823 - Izvrsen oporavak na liniji6
ERROR 20:32:22,823 - 
Sintaksna greska na liniji 14
INFO  20:32:22,823 - #49 Table
INFO  20:32:22,823 - #49 val
INFO  20:32:22,823 - #7 ,
INFO  20:32:22,824 - #49 ok
INFO  20:32:22,824 - #8 ;
INFO  20:32:22,824 - #49 Board
ERROR 20:32:22,824 - Izvrsen oporavak na liniji28
INFO  20:32:22,824 - #49 board
INFO  20:32:22,824 - #8 ;
INFO  20:32:22,824 - #11 {
INFO  20:32:22,825 - #13 void
ERROR 20:32:22,825 - 
Sintaksna greska na liniji 18
INFO  20:32:22,825 - #49 f
INFO  20:32:22,825 - #9 (
INFO  20:32:22,825 - #49 char
INFO  20:32:22,825 - #49 ch
INFO  20:32:22,825 - #7 ,
INFO  20:32:22,825 - #49 int
INFO  20:32:22,825 - #49 a
INFO  20:32:22,825 - #7 ,
INFO  20:32:22,826 - #49 int
INFO  20:32:22,826 - #49 arg
INFO  20:32:22,826 - #10 )
INFO  20:32:22,826 - #49 int
INFO  20:32:22,826 - #49 x
INFO  20:32:22,826 - #8 ;
INFO  20:32:22,826 - #11 {
INFO  20:32:22,826 - #49 x
INFO  20:32:22,827 - #6 =
ERROR 20:32:22,827 - Izvrsen oporavak na liniji17
INFO  20:32:22,827 - #49 arg
INFO  20:32:22,829 - #8 ;
INFO  20:32:22,829 - #12 }
INFO  20:32:22,830 - #13 void
INFO  20:32:22,830 - #49 main
INFO  20:32:22,830 - #9 (
INFO  20:32:22,830 - #10 )
INFO  20:32:22,831 - #49 int
INFO  20:32:22,831 - #49 x
INFO  20:32:22,831 - #7 ,
INFO  20:32:22,831 - #49 i
INFO  20:32:22,831 - #8 ;
INFO  20:32:22,832 - #49 char
INFO  20:32:22,832 - #49 c
INFO  20:32:22,832 - #8 ;
INFO  20:32:22,832 - #11 {
INFO  20:32:22,832 - #49 val
INFO  20:32:22,832 - #6 =
INFO  20:32:22,832 - #21 new
INFO  20:32:22,832 - #49 Table
INFO  20:32:22,832 - #8 ;
INFO  20:32:22,833 - #49 val
INFO  20:32:22,833 - #43 .
INFO  20:32:22,833 - #49 pos
INFO  20:32:22,833 - #6 =
INFO  20:32:22,833 - #21 new
INFO  20:32:22,833 - #49 int
INFO  20:32:22,833 - #38 [
INFO  20:32:22,833 - #49 size
INFO  20:32:22,834 - #39 ]
INFO  20:32:22,835 - #8 ;
INFO  20:32:22,835 - #49 val
INFO  20:32:22,835 - #43 .
INFO  20:32:22,835 - #49 neg
INFO  20:32:22,836 - #6 =
INFO  20:32:22,836 - #21 new
INFO  20:32:22,836 - #49 int
INFO  20:32:22,836 - #38 [
INFO  20:32:22,836 - #49 size
INFO  20:32:22,836 - #39 ]
INFO  20:32:22,836 - #8 ;
INFO  20:32:22,836 - #31 read
INFO  20:32:22,836 - #9 (
INFO  20:32:22,836 - #49 x
INFO  20:32:22,836 - #10 )
INFO  20:32:22,836 - #8 ;
INFO  20:32:22,836 - #15 if
INFO  20:32:22,836 - #9 (
INFO  20:32:22,837 - #49 x
INFO  20:32:22,837 - #23 >
INFO  20:32:22,837 - #47 5
INFO  20:32:22,838 - #10 )
INFO  20:32:22,839 - #11 {
INFO  20:32:22,839 - #30 goto
INFO  20:32:22,839 - #49 skip
INFO  20:32:22,839 - #8 ;
INFO  20:32:22,841 - #12 }
INFO  20:32:22,842 - #49 i
INFO  20:32:22,844 - #6 =
INFO  20:32:22,844 - #47 0
INFO  20:32:22,844 - #8 ;
INFO  20:32:22,844 - #51 do
INFO  20:32:22,844 - #11 {
INFO  20:32:22,844 - #49 val
INFO  20:32:22,845 - #43 .
INFO  20:32:22,845 - #49 putp
INFO  20:32:22,845 - #9 (
INFO  20:32:22,845 - #47 0
INFO  20:32:22,845 - #7 ,
INFO  20:32:22,845 - #49 i
INFO  20:32:22,845 - #10 )
INFO  20:32:22,846 - #8 ;
INFO  20:32:22,846 - #49 val
INFO  20:32:22,846 - #43 .
INFO  20:32:22,846 - #49 putn
INFO  20:32:22,846 - #9 (
INFO  20:32:22,846 - #47 0
INFO  20:32:22,846 - #7 ,
INFO  20:32:22,846 - #49 i
INFO  20:32:22,846 - #10 )
INFO  20:32:22,846 - #8 ;
INFO  20:32:22,847 - #49 i
INFO  20:32:22,847 - #19 ++
INFO  20:32:22,847 - #8 ;
INFO  20:32:22,848 - #12 }
INFO  20:32:22,848 - #18 while
INFO  20:32:22,848 - #9 (
INFO  20:32:22,848 - #49 i
INFO  20:32:22,848 - #22 <
INFO  20:32:22,848 - #49 size
INFO  20:32:22,849 - #10 )
INFO  20:32:22,849 - #8 ;
INFO  20:32:22,849 - #49 skip
INFO  20:32:22,850 - #40 :
INFO  20:32:22,850 - #49 f
INFO  20:32:22,850 - #9 (
INFO  20:32:22,850 - #49 c
INFO  20:32:22,850 - #7 ,
INFO  20:32:22,850 - #49 x
INFO  20:32:22,850 - #7 ,
INFO  20:32:22,850 - #49 i
INFO  20:32:22,850 - #10 )
INFO  20:32:22,850 - #8 ;
INFO  20:32:22,850 - #49 board
INFO  20:32:22,850 - #6 =
INFO  20:32:22,850 - #21 new
INFO  20:32:22,850 - #49 Board
INFO  20:32:22,850 - #8 ;
INFO  20:32:22,850 - #31 read
INFO  20:32:22,851 - #9 (
INFO  20:32:22,851 - #49 board
INFO  20:32:22,851 - #43 .
INFO  20:32:22,851 - #49 rows
INFO  20:32:22,851 - #10 )
INFO  20:32:22,851 - #8 ;
INFO  20:32:22,851 - #49 x
INFO  20:32:22,851 - #6 =
INFO  20:32:22,851 - #49 board
INFO  20:32:22,851 - #43 .
INFO  20:32:22,851 - #49 rows
INFO  20:32:22,853 - #8 ;
INFO  20:32:22,854 - #51 do
INFO  20:32:22,854 - #11 {
INFO  20:32:22,854 - #15 if
INFO  20:32:22,854 - #9 (
INFO  20:32:22,854 - #49 x
INFO  20:32:22,854 - #24 <=
INFO  20:32:22,854 - #47 0
INFO  20:32:22,856 - #10 )
INFO  20:32:22,856 - #45 break
INFO  20:32:22,856 - #8 ;
INFO  20:32:22,856 - #15 if
INFO  20:32:22,857 - #9 (
INFO  20:32:22,857 - #47 0
INFO  20:32:22,857 - #24 <=
INFO  20:32:22,857 - #49 x
INFO  20:32:22,857 - #33 &&
INFO  20:32:22,857 - #49 x
INFO  20:32:22,857 - #22 <
INFO  20:32:22,858 - #49 size
INFO  20:32:22,858 - #10 )
INFO  20:32:22,858 - #11 {
INFO  20:32:22,858 - #49 val
INFO  20:32:22,858 - #43 .
INFO  20:32:22,858 - #49 putp
INFO  20:32:22,858 - #9 (
INFO  20:32:22,858 - #49 val
INFO  20:32:22,858 - #43 .
INFO  20:32:22,858 - #49 getp
INFO  20:32:22,858 - #9 (
INFO  20:32:22,858 - #49 x
INFO  20:32:22,858 - #10 )
INFO  20:32:22,858 - #5 +
INFO  20:32:22,859 - #47 1
INFO  20:32:22,860 - #10 )
INFO  20:32:22,860 - #8 ;
INFO  20:32:22,860 - #12 }
INFO  20:32:22,860 - #16 else
INFO  20:32:22,860 - #15 if
INFO  20:32:22,860 - #9 (
INFO  20:32:22,860 - #37 -
INFO  20:32:22,860 - #49 size
INFO  20:32:22,860 - #22 <
INFO  20:32:22,861 - #49 x
INFO  20:32:22,861 - #33 &&
INFO  20:32:22,861 - #49 x
INFO  20:32:22,861 - #22 <
INFO  20:32:22,861 - #47 0
INFO  20:32:22,861 - #10 )
INFO  20:32:22,861 - #11 {
INFO  20:32:22,861 - #49 val
INFO  20:32:22,861 - #43 .
INFO  20:32:22,861 - #49 putn
INFO  20:32:22,861 - #9 (
INFO  20:32:22,861 - #49 val
INFO  20:32:22,861 - #43 .
INFO  20:32:22,861 - #49 getn
INFO  20:32:22,861 - #9 (
INFO  20:32:22,861 - #37 -
INFO  20:32:22,861 - #49 x
INFO  20:32:22,861 - #10 )
INFO  20:32:22,861 - #5 +
INFO  20:32:22,861 - #47 1
INFO  20:32:22,861 - #10 )
INFO  20:32:22,861 - #8 ;
INFO  20:32:22,862 - #12 }
INFO  20:32:22,862 - #31 read
INFO  20:32:22,862 - #9 (
INFO  20:32:22,862 - #49 x
INFO  20:32:22,862 - #10 )
INFO  20:32:22,862 - #8 ;
INFO  20:32:22,862 - #12 }
INFO  20:32:22,862 - #18 while
INFO  20:32:22,862 - #9 (
INFO  20:32:22,862 - #46 true
INFO  20:32:22,862 - #10 )
INFO  20:32:22,863 - #8 ;
INFO  20:32:22,863 - #3 print
INFO  20:32:22,863 - #9 (
INFO  20:32:22,863 - #49 a
INFO  20:32:22,863 - #38 [
INFO  20:32:22,863 - #49 x
INFO  20:32:22,864 - #39 ]
INFO  20:32:22,864 - #7 ,
INFO  20:32:22,865 - #47 5
INFO  20:32:22,865 - #10 )
INFO  20:32:22,865 - #8 ;
INFO  20:32:22,865 - #12 }
INFO  20:32:22,865 - #12 }
ERROR 20:32:22,866 - 
Sintaksna greska na liniji 62
ERROR 20:32:22,866 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62
