INFO  15:42:57,768 - Compiling source file: C:\Users\Jovan\Desktop\compilers\materijali\Leksicka_analiza\workspace\leksicka\test\program.mj
INFO  15:42:57,844 - #2 program
INFO  15:42:57,845 - #49 p
INFO  15:42:57,845 - #14 const
INFO  15:42:57,846 - #49 int
INFO  15:42:57,846 - #49 size
INFO  15:42:57,847 - #6 =
INFO  15:42:57,847 - #47 10
INFO  15:42:57,847 - #8 ;
INFO  15:42:57,850 - #41 class
INFO  15:42:57,851 - #49 Table
INFO  15:42:57,852 - #11 {
INFO  15:42:57,853 - #49 int
INFO  15:42:57,853 - #49 pos
INFO  15:42:57,853 - #38 [
INFO  15:42:57,854 - #39 ]
INFO  15:42:57,854 - #7 ,
INFO  15:42:57,855 - #49 neg
INFO  15:42:57,855 - #38 [
INFO  15:42:57,855 - #39 ]
INFO  15:42:57,855 - #8 ;
INFO  15:42:57,855 - #11 {
INFO  15:42:57,856 - #13 void
INFO  15:42:57,857 - #49 putp
INFO  15:42:57,857 - #9 (
INFO  15:42:57,857 - #49 int
INFO  15:42:57,857 - #49 a
INFO  15:42:57,857 - #7 ,
INFO  15:42:57,858 - #49 int
INFO  15:42:57,858 - #49 idx
INFO  15:42:57,858 - #10 )
INFO  15:42:57,858 - #11 {
INFO  15:42:57,858 - #49 this
INFO  15:42:57,859 - #43 .
INFO  15:42:57,860 - #49 pos
INFO  15:42:57,860 - #38 [
INFO  15:42:57,860 - #49 idx
INFO  15:42:57,860 - #39 ]
INFO  15:42:57,861 - #6 =
INFO  15:42:57,861 - #49 a
INFO  15:42:57,862 - #8 ;
INFO  15:42:57,863 - #12 }
INFO  15:42:57,863 - #13 void
INFO  15:42:57,863 - #49 putn
INFO  15:42:57,863 - #9 (
INFO  15:42:57,863 - #49 int
INFO  15:42:57,863 - #49 a
INFO  15:42:57,863 - #7 ,
INFO  15:42:57,864 - #49 int
INFO  15:42:57,864 - #49 idx
INFO  15:42:57,864 - #10 )
INFO  15:42:57,864 - #11 {
INFO  15:42:57,864 - #49 this
INFO  15:42:57,864 - #43 .
INFO  15:42:57,864 - #49 neg
INFO  15:42:57,864 - #38 [
INFO  15:42:57,864 - #49 idx
INFO  15:42:57,864 - #39 ]
INFO  15:42:57,864 - #6 =
INFO  15:42:57,864 - #49 a
INFO  15:42:57,865 - #8 ;
INFO  15:42:57,865 - #12 }
INFO  15:42:57,865 - #49 int
INFO  15:42:57,865 - #49 getp
INFO  15:42:57,865 - #9 (
INFO  15:42:57,865 - #49 int
INFO  15:42:57,866 - #49 idx
INFO  15:42:57,866 - #10 )
INFO  15:42:57,866 - #11 {
INFO  15:42:57,866 - #4 return
INFO  15:42:57,866 - #49 pos
INFO  15:42:57,866 - #38 [
INFO  15:42:57,866 - #49 idx
INFO  15:42:57,866 - #39 ]
INFO  15:42:57,866 - #8 ;
INFO  15:42:57,866 - #12 }
INFO  15:42:57,867 - #49 int
INFO  15:42:57,867 - #49 getn
INFO  15:42:57,867 - #9 (
INFO  15:42:57,867 - #49 int
INFO  15:42:57,867 - #49 idx
INFO  15:42:57,867 - #10 )
INFO  15:42:57,867 - #11 {
INFO  15:42:57,867 - #4 return
INFO  15:42:57,867 - #49 neg
INFO  15:42:57,867 - #38 [
INFO  15:42:57,868 - #49 idx
INFO  15:42:57,868 - #39 ]
INFO  15:42:57,868 - #8 ;
INFO  15:42:57,868 - #12 }
INFO  15:42:57,868 - #12 }
INFO  15:42:57,868 - #12 }
INFO  15:42:57,868 - #50 record
INFO  15:42:57,869 - #49 Board
INFO  15:42:57,869 - #11 {
INFO  15:42:57,869 - #49 int
INFO  15:42:57,869 - #49 rows
INFO  15:42:57,869 - #7 ,
INFO  15:42:57,869 - #49 columns
INFO  15:42:57,869 - #8 ;
INFO  15:42:57,869 - #12 }
INFO  15:42:57,869 - #49 Table
INFO  15:42:57,869 - #49 val
INFO  15:42:57,870 - #8 ;
INFO  15:42:57,870 - #49 Board
INFO  15:42:57,870 - #49 board
INFO  15:42:57,870 - #8 ;
INFO  15:42:57,870 - #11 {
INFO  15:42:57,871 - #13 void
INFO  15:42:57,871 - #49 f
INFO  15:42:57,871 - #9 (
INFO  15:42:57,871 - #49 char
INFO  15:42:57,871 - #49 ch
INFO  15:42:57,871 - #7 ,
INFO  15:42:57,871 - #49 int
INFO  15:42:57,872 - #49 a
INFO  15:42:57,872 - #7 ,
INFO  15:42:57,872 - #49 int
INFO  15:42:57,872 - #49 arg
INFO  15:42:57,872 - #10 )
INFO  15:42:57,872 - #49 int
INFO  15:42:57,872 - #49 x
INFO  15:42:57,873 - #8 ;
INFO  15:42:57,873 - #11 {
INFO  15:42:57,873 - #49 x
INFO  15:42:57,873 - #6 =
INFO  15:42:57,873 - #49 arg
INFO  15:42:57,873 - #8 ;
INFO  15:42:57,874 - #12 }
INFO  15:42:57,874 - #13 void
INFO  15:42:57,874 - #49 main
INFO  15:42:57,874 - #9 (
INFO  15:42:57,874 - #10 )
INFO  15:42:57,875 - #49 int
INFO  15:42:57,875 - #49 x
INFO  15:42:57,875 - #7 ,
INFO  15:42:57,875 - #49 i
INFO  15:42:57,876 - #8 ;
INFO  15:42:57,876 - #49 char
INFO  15:42:57,876 - #49 c
INFO  15:42:57,876 - #8 ;
INFO  15:42:57,876 - #11 {
INFO  15:42:57,876 - #49 val
INFO  15:42:57,876 - #6 =
INFO  15:42:57,876 - #21 new
INFO  15:42:57,876 - #49 Table
INFO  15:42:57,876 - #8 ;
INFO  15:42:57,877 - #49 val
INFO  15:42:57,877 - #43 .
INFO  15:42:57,877 - #49 pos
INFO  15:42:57,877 - #6 =
INFO  15:42:57,877 - #21 new
INFO  15:42:57,877 - #49 int
INFO  15:42:57,877 - #38 [
INFO  15:42:57,877 - #49 size
INFO  15:42:57,877 - #39 ]
INFO  15:42:57,877 - #8 ;
INFO  15:42:57,877 - #49 val
INFO  15:42:57,877 - #43 .
INFO  15:42:57,877 - #49 neg
INFO  15:42:57,878 - #6 =
INFO  15:42:57,878 - #21 new
INFO  15:42:57,878 - #49 int
INFO  15:42:57,878 - #38 [
INFO  15:42:57,878 - #49 size
INFO  15:42:57,879 - #39 ]
INFO  15:42:57,879 - #8 ;
INFO  15:42:57,879 - #31 read
INFO  15:42:57,879 - #9 (
INFO  15:42:57,879 - #49 x
INFO  15:42:57,879 - #10 )
INFO  15:42:57,879 - #8 ;
INFO  15:42:57,879 - #15 if
INFO  15:42:57,880 - #9 (
INFO  15:42:57,880 - #49 x
INFO  15:42:57,880 - #23 >
INFO  15:42:57,880 - #47 5
INFO  15:42:57,881 - #10 )
INFO  15:42:57,882 - #11 {
INFO  15:42:57,882 - #30 goto
INFO  15:42:57,882 - #49 skip
INFO  15:42:57,882 - #8 ;
INFO  15:42:57,883 - #12 }
INFO  15:42:57,883 - #49 i
INFO  15:42:57,884 - #6 =
INFO  15:42:57,884 - #47 0
INFO  15:42:57,884 - #8 ;
INFO  15:42:57,884 - #51 do
INFO  15:42:57,884 - #11 {
INFO  15:42:57,884 - #49 val
INFO  15:42:57,884 - #43 .
INFO  15:42:57,884 - #49 putp
INFO  15:42:57,884 - #9 (
INFO  15:42:57,884 - #47 0
INFO  15:42:57,884 - #7 ,
INFO  15:42:57,884 - #49 i
INFO  15:42:57,884 - #10 )
INFO  15:42:57,885 - #8 ;
INFO  15:42:57,885 - #49 val
INFO  15:42:57,885 - #43 .
INFO  15:42:57,885 - #49 putn
INFO  15:42:57,885 - #9 (
INFO  15:42:57,885 - #47 0
INFO  15:42:57,885 - #7 ,
INFO  15:42:57,885 - #49 i
INFO  15:42:57,885 - #10 )
INFO  15:42:57,885 - #8 ;
INFO  15:42:57,885 - #49 i
INFO  15:42:57,885 - #19 ++
INFO  15:42:57,885 - #8 ;
INFO  15:42:57,886 - #12 }
INFO  15:42:57,886 - #18 while
INFO  15:42:57,886 - #9 (
INFO  15:42:57,886 - #49 i
INFO  15:42:57,886 - #22 <
INFO  15:42:57,886 - #49 size
INFO  15:42:57,887 - #10 )
INFO  15:42:57,887 - #8 ;
INFO  15:42:57,887 - #49 skip
INFO  15:42:57,887 - #40 :
INFO  15:42:57,887 - #49 f
INFO  15:42:57,888 - #9 (
INFO  15:42:57,888 - #49 c
INFO  15:42:57,888 - #7 ,
INFO  15:42:57,888 - #49 x
INFO  15:42:57,888 - #7 ,
INFO  15:42:57,888 - #49 i
INFO  15:42:57,888 - #10 )
INFO  15:42:57,888 - #8 ;
INFO  15:42:57,888 - #49 board
INFO  15:42:57,888 - #6 =
INFO  15:42:57,888 - #21 new
INFO  15:42:57,888 - #49 Board
INFO  15:42:57,888 - #8 ;
INFO  15:42:57,888 - #31 read
INFO  15:42:57,888 - #9 (
INFO  15:42:57,889 - #49 board
INFO  15:42:57,889 - #43 .
INFO  15:42:57,889 - #49 rows
INFO  15:42:57,889 - #10 )
INFO  15:42:57,889 - #8 ;
INFO  15:42:57,889 - #49 x
INFO  15:42:57,889 - #6 =
INFO  15:42:57,889 - #49 board
INFO  15:42:57,889 - #43 .
INFO  15:42:57,889 - #49 rows
INFO  15:42:57,889 - #8 ;
INFO  15:42:57,889 - #51 do
INFO  15:42:57,889 - #11 {
INFO  15:42:57,889 - #15 if
INFO  15:42:57,890 - #9 (
INFO  15:42:57,890 - #49 x
INFO  15:42:57,890 - #24 <=
INFO  15:42:57,890 - #47 0
INFO  15:42:57,890 - #10 )
INFO  15:42:57,891 - #45 break
INFO  15:42:57,891 - #8 ;
INFO  15:42:57,891 - #15 if
INFO  15:42:57,892 - #9 (
INFO  15:42:57,892 - #47 0
INFO  15:42:57,892 - #24 <=
INFO  15:42:57,892 - #49 x
INFO  15:42:57,892 - #33 &&
INFO  15:42:57,892 - #49 x
INFO  15:42:57,892 - #22 <
INFO  15:42:57,892 - #49 size
INFO  15:42:57,892 - #10 )
INFO  15:42:57,893 - #11 {
INFO  15:42:57,893 - #49 val
INFO  15:42:57,893 - #43 .
INFO  15:42:57,893 - #49 putp
INFO  15:42:57,893 - #9 (
INFO  15:42:57,893 - #49 val
INFO  15:42:57,893 - #43 .
INFO  15:42:57,893 - #49 getp
INFO  15:42:57,893 - #9 (
INFO  15:42:57,893 - #49 x
INFO  15:42:57,893 - #10 )
INFO  15:42:57,893 - #5 +
INFO  15:42:57,893 - #47 1
INFO  15:42:57,895 - #10 )
INFO  15:42:57,895 - #8 ;
INFO  15:42:57,895 - #12 }
INFO  15:42:57,895 - #16 else
INFO  15:42:57,895 - #15 if
INFO  15:42:57,895 - #9 (
INFO  15:42:57,895 - #37 -
INFO  15:42:57,895 - #49 size
INFO  15:42:57,895 - #22 <
INFO  15:42:57,896 - #49 x
INFO  15:42:57,896 - #33 &&
INFO  15:42:57,896 - #49 x
INFO  15:42:57,896 - #22 <
INFO  15:42:57,896 - #47 0
INFO  15:42:57,896 - #10 )
INFO  15:42:57,896 - #11 {
INFO  15:42:57,896 - #49 val
INFO  15:42:57,896 - #43 .
INFO  15:42:57,896 - #49 putn
INFO  15:42:57,897 - #9 (
INFO  15:42:57,897 - #49 val
INFO  15:42:57,897 - #43 .
INFO  15:42:57,897 - #49 getn
INFO  15:42:57,897 - #9 (
INFO  15:42:57,897 - #37 -
INFO  15:42:57,897 - #49 x
INFO  15:42:57,897 - #10 )
INFO  15:42:57,897 - #5 +
INFO  15:42:57,897 - #47 1
INFO  15:42:57,897 - #10 )
INFO  15:42:57,897 - #8 ;
INFO  15:42:57,897 - #12 }
INFO  15:42:57,897 - #31 read
INFO  15:42:57,897 - #9 (
INFO  15:42:57,898 - #49 x
INFO  15:42:57,898 - #10 )
INFO  15:42:57,898 - #8 ;
INFO  15:42:57,898 - #12 }
INFO  15:42:57,898 - #18 while
INFO  15:42:57,898 - #9 (
INFO  15:42:57,898 - #46 true
INFO  15:42:57,898 - #10 )
INFO  15:42:57,899 - #8 ;
INFO  15:42:57,899 - #3 print
INFO  15:42:57,899 - #9 (
INFO  15:42:57,899 - #49 a
INFO  15:42:57,899 - #38 [
INFO  15:42:57,899 - #49 x
INFO  15:42:57,899 - #39 ]
INFO  15:42:57,900 - #7 ,
INFO  15:42:57,905 - #49 a
ERROR 15:42:57,906 - 
Sintaksna greska na liniji 60
ERROR 15:42:57,906 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 60
