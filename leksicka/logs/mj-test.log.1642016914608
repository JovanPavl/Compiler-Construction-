INFO  20:33:51,559 - Compiling source file: C:\Users\Jovan\Desktop\compilers\materijali\Leksicka_analiza\workspace\leksicka\test\program.mj
INFO  20:33:51,656 - #2 program
INFO  20:33:51,656 - #49 p
INFO  20:33:51,656 - #14 const
INFO  20:33:51,657 - #49 int
INFO  20:33:51,657 - #49 size
INFO  20:33:51,659 - #6 =
INFO  20:33:51,659 - #47 10
INFO  20:33:51,659 - #8 ;
INFO  20:33:51,662 - #41 class
INFO  20:33:51,663 - #49 Table
INFO  20:33:51,664 - #11 {
INFO  20:33:51,665 - #49 int
INFO  20:33:51,666 - #49 pos
INFO  20:33:51,666 - #38 [
INFO  20:33:51,666 - #39 ]
INFO  20:33:51,666 - #7 ,
INFO  20:33:51,667 - #49 neg
INFO  20:33:51,667 - #38 [
INFO  20:33:51,667 - #39 ]
INFO  20:33:51,668 - #8 ;
INFO  20:33:51,668 - #11 {
INFO  20:33:51,673 - #13 void
INFO  20:33:51,673 - #49 putp
INFO  20:33:51,674 - #9 (
INFO  20:33:51,674 - #49 int
INFO  20:33:51,674 - #49 a
INFO  20:33:51,674 - #7 ,
INFO  20:33:51,675 - #49 int
INFO  20:33:51,675 - #49 idx
INFO  20:33:51,675 - #10 )
INFO  20:33:51,675 - #11 {
INFO  20:33:51,675 - #49 this
INFO  20:33:51,676 - #43 .
INFO  20:33:51,677 - #49 pos
INFO  20:33:51,677 - #38 [
INFO  20:33:51,677 - #49 idx
INFO  20:33:51,677 - #39 ]
INFO  20:33:51,678 - #6 =
INFO  20:33:51,678 - #49 a
INFO  20:33:51,679 - #8 ;
INFO  20:33:51,680 - #12 }
INFO  20:33:51,680 - #13 void
INFO  20:33:51,681 - #49 putn
INFO  20:33:51,681 - #9 (
INFO  20:33:51,681 - #49 int
INFO  20:33:51,681 - #49 a
INFO  20:33:51,681 - #7 ,
INFO  20:33:51,681 - #49 int
INFO  20:33:51,681 - #49 idx
INFO  20:33:51,682 - #10 )
INFO  20:33:51,682 - #11 {
INFO  20:33:51,682 - #49 this
INFO  20:33:51,682 - #43 .
INFO  20:33:51,682 - #49 neg
INFO  20:33:51,682 - #38 [
INFO  20:33:51,682 - #49 idx
INFO  20:33:51,682 - #39 ]
INFO  20:33:51,682 - #6 =
INFO  20:33:51,683 - #49 a
INFO  20:33:51,683 - #8 ;
INFO  20:33:51,683 - #12 }
INFO  20:33:51,683 - #49 int
INFO  20:33:51,683 - #49 getp
INFO  20:33:51,684 - #9 (
INFO  20:33:51,684 - #49 int
INFO  20:33:51,684 - #49 idx
INFO  20:33:51,684 - #10 )
INFO  20:33:51,684 - #11 {
INFO  20:33:51,684 - #4 return
INFO  20:33:51,684 - #49 pos
INFO  20:33:51,684 - #38 [
INFO  20:33:51,685 - #49 idx
INFO  20:33:51,685 - #39 ]
INFO  20:33:51,685 - #7 ,
ERROR 20:33:51,685 - 
Sintaksna greska na liniji 8
INFO  20:33:51,685 - #8 ;
INFO  20:33:51,685 - #12 }
INFO  20:33:51,685 - #49 int
INFO  20:33:51,686 - #49 getn
INFO  20:33:51,687 - #9 (
INFO  20:33:51,687 - #49 int
INFO  20:33:51,687 - #49 idx
INFO  20:33:51,687 - #10 )
INFO  20:33:51,687 - #11 {
INFO  20:33:51,687 - #4 return
INFO  20:33:51,687 - #49 neg
INFO  20:33:51,687 - #38 [
INFO  20:33:51,687 - #49 idx
INFO  20:33:51,687 - #39 ]
INFO  20:33:51,688 - #8 ;
INFO  20:33:51,688 - #12 }
INFO  20:33:51,688 - #12 }
INFO  20:33:51,688 - #12 }
INFO  20:33:51,688 - #50 record
INFO  20:33:51,688 - #49 Board
INFO  20:33:51,688 - #11 {
INFO  20:33:51,688 - #49 int
INFO  20:33:51,688 - #49 rows
INFO  20:33:51,689 - #7 ,
INFO  20:33:51,689 - #49 columns
INFO  20:33:51,689 - #8 ;
INFO  20:33:51,689 - #12 }
ERROR 20:33:51,689 - Izvrsen oporavak na liniji8
ERROR 20:33:51,689 - 
Sintaksna greska na liniji 14
INFO  20:33:51,689 - #49 Table
INFO  20:33:51,690 - #49 val
INFO  20:33:51,690 - #7 ,
INFO  20:33:51,690 - #49 ok
INFO  20:33:51,690 - #8 ;
INFO  20:33:51,690 - #49 Board
ERROR 20:33:51,690 - Izvrsen oporavak na liniji20
INFO  20:33:51,690 - #49 board
INFO  20:33:51,690 - #8 ;
INFO  20:33:51,691 - #11 {
INFO  20:33:51,691 - #13 void
ERROR 20:33:51,691 - 
Sintaksna greska na liniji 18
INFO  20:33:51,691 - #49 f
INFO  20:33:51,691 - #9 (
INFO  20:33:51,691 - #49 char
INFO  20:33:51,691 - #49 ch
INFO  20:33:51,691 - #7 ,
INFO  20:33:51,691 - #49 int
INFO  20:33:51,692 - #49 a
INFO  20:33:51,692 - #7 ,
INFO  20:33:51,692 - #49 int
INFO  20:33:51,692 - #49 arg
INFO  20:33:51,692 - #10 )
INFO  20:33:51,692 - #49 int
INFO  20:33:51,692 - #49 x
INFO  20:33:51,693 - #8 ;
INFO  20:33:51,693 - #11 {
INFO  20:33:51,693 - #49 x
INFO  20:33:51,693 - #6 =
ERROR 20:33:51,693 - Izvrsen oporavak na liniji17
INFO  20:33:51,693 - #49 arg
INFO  20:33:51,693 - #8 ;
INFO  20:33:51,693 - #12 }
INFO  20:33:51,693 - #13 void
INFO  20:33:51,694 - #49 main
INFO  20:33:51,694 - #9 (
INFO  20:33:51,694 - #10 )
INFO  20:33:51,695 - #49 int
INFO  20:33:51,695 - #49 x
INFO  20:33:51,695 - #7 ,
INFO  20:33:51,695 - #49 i
INFO  20:33:51,695 - #8 ;
INFO  20:33:51,696 - #49 char
INFO  20:33:51,696 - #49 c
INFO  20:33:51,696 - #8 ;
INFO  20:33:51,696 - #11 {
INFO  20:33:51,696 - #49 val
INFO  20:33:51,696 - #6 =
INFO  20:33:51,696 - #21 new
INFO  20:33:51,696 - #49 Table
INFO  20:33:51,696 - #8 ;
INFO  20:33:51,697 - #49 val
INFO  20:33:51,697 - #43 .
INFO  20:33:51,697 - #49 pos
INFO  20:33:51,697 - #6 =
INFO  20:33:51,697 - #21 new
INFO  20:33:51,698 - #49 int
INFO  20:33:51,698 - #38 [
INFO  20:33:51,698 - #49 size
INFO  20:33:51,698 - #39 ]
INFO  20:33:51,700 - #8 ;
INFO  20:33:51,700 - #49 val
INFO  20:33:51,701 - #43 .
INFO  20:33:51,701 - #49 neg
INFO  20:33:51,701 - #6 =
INFO  20:33:51,701 - #21 new
INFO  20:33:51,701 - #49 int
INFO  20:33:51,701 - #38 [
INFO  20:33:51,701 - #49 size
INFO  20:33:51,701 - #39 ]
INFO  20:33:51,701 - #8 ;
INFO  20:33:51,701 - #31 read
INFO  20:33:51,702 - #9 (
INFO  20:33:51,702 - #49 x
INFO  20:33:51,702 - #10 )
INFO  20:33:51,702 - #8 ;
INFO  20:33:51,702 - #15 if
INFO  20:33:51,702 - #9 (
INFO  20:33:51,702 - #49 x
INFO  20:33:51,702 - #23 >
INFO  20:33:51,703 - #47 5
INFO  20:33:51,704 - #10 )
INFO  20:33:51,705 - #11 {
INFO  20:33:51,705 - #30 goto
INFO  20:33:51,706 - #49 skip
INFO  20:33:51,706 - #8 ;
INFO  20:33:51,707 - #12 }
INFO  20:33:51,707 - #49 i
INFO  20:33:51,709 - #6 =
INFO  20:33:51,709 - #47 0
INFO  20:33:51,709 - #8 ;
INFO  20:33:51,709 - #51 do
INFO  20:33:51,709 - #11 {
INFO  20:33:51,710 - #49 val
INFO  20:33:51,710 - #43 .
INFO  20:33:51,710 - #49 putp
INFO  20:33:51,710 - #9 (
INFO  20:33:51,710 - #47 0
INFO  20:33:51,710 - #7 ,
INFO  20:33:51,710 - #49 i
INFO  20:33:51,711 - #10 )
INFO  20:33:51,711 - #8 ;
INFO  20:33:51,711 - #49 val
INFO  20:33:51,711 - #43 .
INFO  20:33:51,711 - #49 putn
INFO  20:33:51,711 - #9 (
INFO  20:33:51,711 - #47 0
INFO  20:33:51,711 - #7 ,
INFO  20:33:51,712 - #49 i
INFO  20:33:51,712 - #10 )
INFO  20:33:51,712 - #8 ;
INFO  20:33:51,712 - #49 i
INFO  20:33:51,712 - #19 ++
INFO  20:33:51,712 - #8 ;
INFO  20:33:51,713 - #12 }
INFO  20:33:51,713 - #18 while
INFO  20:33:51,714 - #9 (
INFO  20:33:51,714 - #49 i
INFO  20:33:51,714 - #22 <
INFO  20:33:51,714 - #49 size
INFO  20:33:51,715 - #10 )
INFO  20:33:51,715 - #8 ;
INFO  20:33:51,715 - #49 skip
INFO  20:33:51,715 - #40 :
INFO  20:33:51,715 - #49 f
INFO  20:33:51,716 - #9 (
INFO  20:33:51,716 - #49 c
INFO  20:33:51,716 - #7 ,
INFO  20:33:51,716 - #49 x
INFO  20:33:51,716 - #7 ,
INFO  20:33:51,716 - #49 i
INFO  20:33:51,716 - #10 )
INFO  20:33:51,716 - #8 ;
INFO  20:33:51,717 - #49 board
INFO  20:33:51,717 - #6 =
INFO  20:33:51,717 - #21 new
INFO  20:33:51,717 - #49 Board
INFO  20:33:51,717 - #8 ;
INFO  20:33:51,717 - #31 read
INFO  20:33:51,717 - #9 (
INFO  20:33:51,717 - #49 board
INFO  20:33:51,718 - #43 .
INFO  20:33:51,718 - #49 rows
INFO  20:33:51,718 - #10 )
INFO  20:33:51,718 - #8 ;
INFO  20:33:51,718 - #49 x
INFO  20:33:51,718 - #6 =
INFO  20:33:51,718 - #49 board
INFO  20:33:51,718 - #43 .
INFO  20:33:51,719 - #49 rows
INFO  20:33:51,722 - #8 ;
INFO  20:33:51,722 - #51 do
INFO  20:33:51,722 - #11 {
INFO  20:33:51,722 - #15 if
INFO  20:33:51,722 - #9 (
INFO  20:33:51,722 - #49 x
INFO  20:33:51,723 - #24 <=
INFO  20:33:51,723 - #47 0
INFO  20:33:51,724 - #10 )
INFO  20:33:51,724 - #45 break
INFO  20:33:51,724 - #8 ;
INFO  20:33:51,724 - #15 if
INFO  20:33:51,725 - #9 (
INFO  20:33:51,725 - #47 0
INFO  20:33:51,725 - #24 <=
INFO  20:33:51,726 - #49 x
INFO  20:33:51,726 - #33 &&
INFO  20:33:51,726 - #49 x
INFO  20:33:51,726 - #22 <
INFO  20:33:51,726 - #49 size
INFO  20:33:51,726 - #10 )
INFO  20:33:51,726 - #11 {
INFO  20:33:51,727 - #49 val
INFO  20:33:51,727 - #43 .
INFO  20:33:51,727 - #49 putp
INFO  20:33:51,727 - #9 (
INFO  20:33:51,727 - #49 val
INFO  20:33:51,727 - #43 .
INFO  20:33:51,727 - #49 getp
INFO  20:33:51,727 - #9 (
INFO  20:33:51,727 - #49 x
INFO  20:33:51,727 - #10 )
INFO  20:33:51,727 - #5 +
INFO  20:33:51,728 - #47 1
INFO  20:33:51,730 - #10 )
INFO  20:33:51,730 - #8 ;
INFO  20:33:51,730 - #12 }
INFO  20:33:51,730 - #16 else
INFO  20:33:51,730 - #15 if
INFO  20:33:51,730 - #9 (
INFO  20:33:51,730 - #37 -
INFO  20:33:51,730 - #49 size
INFO  20:33:51,731 - #22 <
INFO  20:33:51,731 - #49 x
INFO  20:33:51,731 - #33 &&
INFO  20:33:51,731 - #49 x
INFO  20:33:51,731 - #22 <
INFO  20:33:51,731 - #47 0
INFO  20:33:51,731 - #10 )
INFO  20:33:51,731 - #11 {
INFO  20:33:51,731 - #49 val
INFO  20:33:51,731 - #43 .
INFO  20:33:51,731 - #49 putn
INFO  20:33:51,732 - #9 (
INFO  20:33:51,732 - #49 val
INFO  20:33:51,732 - #43 .
INFO  20:33:51,732 - #49 getn
INFO  20:33:51,732 - #9 (
INFO  20:33:51,732 - #37 -
INFO  20:33:51,732 - #49 x
INFO  20:33:51,732 - #10 )
INFO  20:33:51,732 - #5 +
INFO  20:33:51,732 - #47 1
INFO  20:33:51,733 - #10 )
INFO  20:33:51,733 - #8 ;
INFO  20:33:51,733 - #12 }
INFO  20:33:51,733 - #31 read
INFO  20:33:51,733 - #9 (
INFO  20:33:51,733 - #49 x
INFO  20:33:51,733 - #10 )
INFO  20:33:51,733 - #8 ;
INFO  20:33:51,734 - #12 }
INFO  20:33:51,734 - #18 while
INFO  20:33:51,734 - #9 (
INFO  20:33:51,734 - #46 true
INFO  20:33:51,734 - #10 )
INFO  20:33:51,735 - #8 ;
INFO  20:33:51,735 - #3 print
INFO  20:33:51,735 - #9 (
INFO  20:33:51,735 - #49 a
INFO  20:33:51,736 - #38 [
INFO  20:33:51,736 - #49 x
INFO  20:33:51,736 - #39 ]
INFO  20:33:51,736 - #7 ,
INFO  20:33:51,737 - #47 5
INFO  20:33:51,737 - #10 )
INFO  20:33:51,737 - #8 ;
INFO  20:33:51,737 - #12 }
INFO  20:33:51,738 - #12 }
ERROR 20:33:51,738 - 
Sintaksna greska na liniji 62
ERROR 20:33:51,738 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62
