INFO  20:48:34,616 - Compiling source file: C:\Users\Jovan\Desktop\compilers\materijali\Leksicka_analiza\workspace\leksicka\test\program.mj
INFO  20:48:34,809 - #2 program
INFO  20:48:34,809 - #49 p
INFO  20:48:34,809 - #14 const
INFO  20:48:34,811 - #49 int
INFO  20:48:34,811 - #49 size
INFO  20:48:34,814 - #6 =
INFO  20:48:34,814 - #47 10
INFO  20:48:34,814 - #8 ;
INFO  20:48:34,817 - #41 class
INFO  20:48:34,819 - #49 Table
INFO  20:48:34,819 - #11 {
INFO  20:48:34,822 - #49 int
INFO  20:48:34,823 - #49 pos
INFO  20:48:34,823 - #38 [
INFO  20:48:34,823 - #39 ]
INFO  20:48:34,824 - #7 ,
INFO  20:48:34,825 - #49 neg
INFO  20:48:34,825 - #38 [
INFO  20:48:34,826 - #39 ]
INFO  20:48:34,826 - #8 ;
INFO  20:48:34,826 - #11 {
INFO  20:48:34,828 - #13 void
INFO  20:48:34,829 - #49 putp
INFO  20:48:34,830 - #9 (
INFO  20:48:34,830 - #49 int
INFO  20:48:34,830 - #49 a
INFO  20:48:34,830 - #7 ,
INFO  20:48:34,832 - #49 int
INFO  20:48:34,832 - #49 idx
INFO  20:48:34,832 - #10 )
INFO  20:48:34,833 - #11 {
INFO  20:48:34,833 - #49 this
INFO  20:48:34,834 - #43 .
INFO  20:48:34,836 - #49 pos
INFO  20:48:34,836 - #38 [
INFO  20:48:34,836 - #49 idx
INFO  20:48:34,836 - #39 ]
INFO  20:48:34,837 - #6 =
INFO  20:48:34,837 - #49 a
INFO  20:48:34,840 - #8 ;
INFO  20:48:34,840 - #12 }
INFO  20:48:34,841 - #13 void
INFO  20:48:34,842 - #49 putn
INFO  20:48:34,842 - #9 (
INFO  20:48:34,842 - #49 int
INFO  20:48:34,842 - #49 a
INFO  20:48:34,842 - #7 ,
INFO  20:48:34,842 - #49 int
INFO  20:48:34,843 - #49 idx
INFO  20:48:34,843 - #10 )
INFO  20:48:34,843 - #11 {
INFO  20:48:34,843 - #49 this
INFO  20:48:34,843 - #43 .
INFO  20:48:34,844 - #49 neg
INFO  20:48:34,844 - #38 [
INFO  20:48:34,844 - #49 idx
INFO  20:48:34,844 - #39 ]
INFO  20:48:34,844 - #6 =
INFO  20:48:34,844 - #49 a
INFO  20:48:34,845 - #8 ;
INFO  20:48:34,845 - #12 }
INFO  20:48:34,845 - #49 int
INFO  20:48:34,845 - #49 getp
INFO  20:48:34,846 - #9 (
INFO  20:48:34,846 - #49 int
INFO  20:48:34,846 - #49 idx
INFO  20:48:34,846 - #10 )
INFO  20:48:34,846 - #11 {
INFO  20:48:34,846 - #4 return
INFO  20:48:34,846 - #49 pos
INFO  20:48:34,847 - #38 [
INFO  20:48:34,848 - #49 idx
INFO  20:48:34,848 - #39 ]
INFO  20:48:34,848 - #7 ,
ERROR 20:48:34,848 - 
Sintaksna greska na liniji 8
INFO  20:48:34,848 - #8 ;
INFO  20:48:34,849 - #12 }
INFO  20:48:34,849 - #49 int
INFO  20:48:34,850 - #49 getn
INFO  20:48:34,850 - #9 (
INFO  20:48:34,850 - #49 int
INFO  20:48:34,850 - #49 idx
INFO  20:48:34,850 - #10 )
INFO  20:48:34,850 - #11 {
INFO  20:48:34,850 - #4 return
INFO  20:48:34,850 - #49 neg
INFO  20:48:34,851 - #38 [
INFO  20:48:34,851 - #49 idx
INFO  20:48:34,851 - #39 ]
INFO  20:48:34,851 - #8 ;
INFO  20:48:34,851 - #12 }
INFO  20:48:34,851 - #12 }
INFO  20:48:34,851 - #12 }
INFO  20:48:34,851 - #50 record
INFO  20:48:34,852 - #49 Board
INFO  20:48:34,852 - #11 {
INFO  20:48:34,852 - #49 int
INFO  20:48:34,852 - #49 rows
INFO  20:48:34,852 - #7 ,
INFO  20:48:34,852 - #49 columns
INFO  20:48:34,853 - #8 ;
INFO  20:48:34,853 - #12 }
ERROR 20:48:34,855 - B Izvrsen oporavak na liniji8
ERROR 20:48:34,855 - 
Sintaksna greska na liniji 14
INFO  20:48:34,855 - #49 Table
INFO  20:48:34,856 - #49 val
INFO  20:48:34,856 - #7 ,
INFO  20:48:34,856 - #49 ok
INFO  20:48:34,856 - #8 ;
INFO  20:48:34,858 - #49 Board
ERROR 20:48:34,859 - B Izvrsen oporavak na liniji20
INFO  20:48:34,859 - #49 board
INFO  20:48:34,863 - #8 ;
INFO  20:48:34,864 - #11 {
INFO  20:48:34,864 - #13 void
ERROR 20:48:34,864 - 
Sintaksna greska na liniji 18
INFO  20:48:34,865 - #49 f
INFO  20:48:34,865 - #9 (
INFO  20:48:34,865 - #49 char
INFO  20:48:34,865 - #49 ch
INFO  20:48:34,865 - #7 ,
INFO  20:48:34,866 - #49 int
INFO  20:48:34,866 - #49 a
INFO  20:48:34,866 - #7 ,
INFO  20:48:34,866 - #49 int
INFO  20:48:34,867 - #49 arg
INFO  20:48:34,867 - #10 )
INFO  20:48:34,867 - #49 int
INFO  20:48:34,868 - #49 x
INFO  20:48:34,868 - #8 ;
INFO  20:48:34,868 - #11 {
INFO  20:48:34,868 - #49 x
INFO  20:48:34,868 - #6 =
ERROR 20:48:34,869 - B Izvrsen oporavak na liniji17
INFO  20:48:34,869 - #49 arg
INFO  20:48:34,869 - #8 ;
INFO  20:48:34,869 - #12 }
INFO  20:48:34,870 - #13 void
INFO  20:48:34,870 - #49 main
INFO  20:48:34,870 - #9 (
INFO  20:48:34,870 - #10 )
INFO  20:48:34,872 - #49 int
INFO  20:48:34,872 - #49 x
INFO  20:48:34,872 - #7 ,
INFO  20:48:34,872 - #49 i
INFO  20:48:34,872 - #8 ;
INFO  20:48:34,872 - #49 char
INFO  20:48:34,872 - #49 c
INFO  20:48:34,873 - #8 ;
INFO  20:48:34,873 - #11 {
INFO  20:48:34,873 - #49 val
INFO  20:48:34,873 - #6 =
INFO  20:48:34,873 - #21 new
INFO  20:48:34,873 - #49 Table
INFO  20:48:34,873 - #8 ;
INFO  20:48:34,874 - #49 val
INFO  20:48:34,875 - #43 .
INFO  20:48:34,875 - #49 pos
INFO  20:48:34,875 - #6 =
INFO  20:48:34,875 - #21 new
INFO  20:48:34,875 - #49 int
INFO  20:48:34,875 - #38 [
INFO  20:48:34,875 - #49 size
INFO  20:48:34,876 - #39 ]
INFO  20:48:34,878 - #8 ;
INFO  20:48:34,878 - #49 val
INFO  20:48:34,878 - #43 .
INFO  20:48:34,879 - #49 neg
INFO  20:48:34,879 - #6 =
INFO  20:48:34,879 - #21 new
INFO  20:48:34,879 - #49 int
INFO  20:48:34,879 - #38 [
INFO  20:48:34,879 - #49 size
INFO  20:48:34,879 - #39 ]
INFO  20:48:34,880 - #8 ;
INFO  20:48:34,880 - #31 read
INFO  20:48:34,880 - #9 (
INFO  20:48:34,880 - #49 x
INFO  20:48:34,880 - #10 )
INFO  20:48:34,880 - #8 ;
INFO  20:48:34,880 - #15 if
INFO  20:48:34,880 - #9 (
INFO  20:48:34,881 - #49 x
INFO  20:48:34,881 - #23 >
INFO  20:48:34,881 - #47 5
INFO  20:48:34,883 - #10 )
INFO  20:48:34,885 - #11 {
INFO  20:48:34,885 - #30 goto
INFO  20:48:34,885 - #49 skip
INFO  20:48:34,886 - #8 ;
INFO  20:48:34,888 - #12 }
INFO  20:48:34,889 - #49 i
INFO  20:48:34,891 - #6 =
INFO  20:48:34,891 - #47 0
INFO  20:48:34,891 - #8 ;
INFO  20:48:34,891 - #51 do
INFO  20:48:34,892 - #11 {
INFO  20:48:34,892 - #49 val
INFO  20:48:34,892 - #43 .
INFO  20:48:34,892 - #49 putp
INFO  20:48:34,892 - #9 (
INFO  20:48:34,892 - #47 0
INFO  20:48:34,892 - #7 ,
INFO  20:48:34,892 - #49 i
INFO  20:48:34,892 - #10 )
INFO  20:48:34,893 - #8 ;
INFO  20:48:34,893 - #49 val
INFO  20:48:34,893 - #43 .
INFO  20:48:34,893 - #49 putn
INFO  20:48:34,893 - #9 (
INFO  20:48:34,893 - #47 0
INFO  20:48:34,893 - #7 ,
INFO  20:48:34,894 - #49 i
INFO  20:48:34,894 - #10 )
INFO  20:48:34,894 - #8 ;
INFO  20:48:34,894 - #49 i
INFO  20:48:34,894 - #19 ++
INFO  20:48:34,894 - #8 ;
INFO  20:48:34,896 - #12 }
INFO  20:48:34,896 - #18 while
INFO  20:48:34,896 - #9 (
INFO  20:48:34,896 - #49 i
INFO  20:48:34,896 - #22 <
INFO  20:48:34,896 - #49 size
INFO  20:48:34,897 - #10 )
INFO  20:48:34,898 - #8 ;
INFO  20:48:34,898 - #49 skip
INFO  20:48:34,898 - #40 :
INFO  20:48:34,898 - #49 f
INFO  20:48:34,898 - #9 (
INFO  20:48:34,898 - #49 c
INFO  20:48:34,898 - #7 ,
INFO  20:48:34,898 - #49 x
INFO  20:48:34,898 - #7 ,
INFO  20:48:34,899 - #49 i
INFO  20:48:34,899 - #10 )
INFO  20:48:34,899 - #8 ;
INFO  20:48:34,899 - #49 board
INFO  20:48:34,899 - #6 =
INFO  20:48:34,899 - #21 new
INFO  20:48:34,899 - #49 Board
INFO  20:48:34,899 - #8 ;
INFO  20:48:34,900 - #31 read
INFO  20:48:34,900 - #9 (
INFO  20:48:34,900 - #49 board
INFO  20:48:34,900 - #43 .
INFO  20:48:34,900 - #49 rows
INFO  20:48:34,900 - #10 )
INFO  20:48:34,900 - #8 ;
INFO  20:48:34,900 - #49 x
INFO  20:48:34,900 - #6 =
INFO  20:48:34,901 - #49 board
INFO  20:48:34,901 - #43 .
INFO  20:48:34,901 - #49 rows
INFO  20:48:34,904 - #8 ;
INFO  20:48:34,905 - #51 do
INFO  20:48:34,905 - #11 {
INFO  20:48:34,905 - #15 if
INFO  20:48:34,905 - #9 (
INFO  20:48:34,905 - #49 x
INFO  20:48:34,905 - #24 <=
INFO  20:48:34,905 - #47 0
INFO  20:48:34,907 - #10 )
INFO  20:48:34,907 - #45 break
INFO  20:48:34,907 - #8 ;
INFO  20:48:34,907 - #15 if
INFO  20:48:34,909 - #9 (
INFO  20:48:34,909 - #47 0
INFO  20:48:34,909 - #24 <=
INFO  20:48:34,909 - #49 x
INFO  20:48:34,909 - #33 &&
INFO  20:48:34,909 - #49 x
INFO  20:48:34,909 - #22 <
INFO  20:48:34,910 - #49 size
INFO  20:48:34,910 - #10 )
INFO  20:48:34,910 - #11 {
INFO  20:48:34,910 - #49 val
INFO  20:48:34,910 - #43 .
INFO  20:48:34,910 - #49 putp
INFO  20:48:34,911 - #9 (
INFO  20:48:34,911 - #49 val
INFO  20:48:34,911 - #43 .
INFO  20:48:34,911 - #49 getp
INFO  20:48:34,911 - #9 (
INFO  20:48:34,911 - #49 x
INFO  20:48:34,911 - #10 )
INFO  20:48:34,912 - #5 +
INFO  20:48:34,912 - #47 1
INFO  20:48:34,914 - #10 )
INFO  20:48:34,915 - #8 ;
INFO  20:48:34,915 - #12 }
INFO  20:48:34,915 - #16 else
INFO  20:48:34,915 - #15 if
INFO  20:48:34,915 - #9 (
INFO  20:48:34,915 - #37 -
INFO  20:48:34,915 - #49 size
INFO  20:48:34,915 - #22 <
INFO  20:48:34,916 - #49 x
INFO  20:48:34,916 - #33 &&
INFO  20:48:34,916 - #49 x
INFO  20:48:34,916 - #22 <
INFO  20:48:34,916 - #47 0
INFO  20:48:34,916 - #10 )
INFO  20:48:34,916 - #11 {
INFO  20:48:34,916 - #49 val
INFO  20:48:34,916 - #43 .
INFO  20:48:34,917 - #49 putn
INFO  20:48:34,917 - #9 (
INFO  20:48:34,917 - #49 val
INFO  20:48:34,917 - #43 .
INFO  20:48:34,917 - #49 getn
INFO  20:48:34,917 - #9 (
INFO  20:48:34,918 - #37 -
INFO  20:48:34,918 - #49 x
INFO  20:48:34,918 - #10 )
INFO  20:48:34,918 - #5 +
INFO  20:48:34,918 - #47 1
INFO  20:48:34,918 - #10 )
INFO  20:48:34,918 - #8 ;
INFO  20:48:34,920 - #12 }
INFO  20:48:34,920 - #31 read
INFO  20:48:34,920 - #9 (
INFO  20:48:34,920 - #49 x
INFO  20:48:34,920 - #10 )
INFO  20:48:34,921 - #8 ;
INFO  20:48:34,921 - #12 }
INFO  20:48:34,921 - #18 while
INFO  20:48:34,921 - #9 (
INFO  20:48:34,921 - #46 true
INFO  20:48:34,921 - #10 )
INFO  20:48:34,923 - #8 ;
INFO  20:48:34,924 - #3 print
INFO  20:48:34,924 - #9 (
INFO  20:48:34,924 - #49 a
INFO  20:48:34,925 - #38 [
INFO  20:48:34,925 - #49 x
INFO  20:48:34,925 - #39 ]
INFO  20:48:34,925 - #7 ,
INFO  20:48:34,926 - #47 5
INFO  20:48:34,927 - #10 )
INFO  20:48:34,927 - #8 ;
INFO  20:48:34,927 - #12 }
INFO  20:48:34,927 - #12 }
ERROR 20:48:34,928 - 
Sintaksna greska na liniji 62
ERROR 20:48:34,928 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62
