INFO  22:48:57,174 - Compiling source file: C:\Users\Jovan\Desktop\compilers\materijali\Leksicka_analiza\workspace\leksicka\test\program.mj
INFO  22:48:57,192 - #2 program
INFO  22:48:57,192 - #48 p
INFO  22:48:57,192 - #14 const
INFO  22:48:57,192 - #48 int
INFO  22:48:57,192 - #48 size
INFO  22:48:57,193 - #6 =
INFO  22:48:57,193 - #51 10
INFO  22:48:57,193 - #8 ;
INFO  22:48:57,193 - #41 class
INFO  22:48:57,193 - #48 Table
INFO  22:48:57,193 - #11 {
INFO  22:48:57,193 - #48 int
INFO  22:48:57,194 - #48 pos
INFO  22:48:57,194 - #38 [
INFO  22:48:57,194 - #39 ]
INFO  22:48:57,194 - #7 ,
INFO  22:48:57,194 - #48 neg
INFO  22:48:57,194 - #38 [
INFO  22:48:57,194 - #39 ]
INFO  22:48:57,194 - #8 ;
INFO  22:48:57,195 - #11 {
INFO  22:48:57,195 - #13 void
INFO  22:48:57,195 - #48 putp
INFO  22:48:57,195 - #9 (
INFO  22:48:57,195 - #48 int
INFO  22:48:57,195 - #48 a
INFO  22:48:57,195 - #7 ,
INFO  22:48:57,196 - #48 int
INFO  22:48:57,196 - #48 idx
INFO  22:48:57,196 - #10 )
INFO  22:48:57,196 - #11 {
INFO  22:48:57,196 - #48 this
INFO  22:48:57,196 - #43 .
INFO  22:48:57,196 - #48 pos
INFO  22:48:57,196 - #38 [
INFO  22:48:57,196 - #48 idx
INFO  22:48:57,197 - #39 ]
INFO  22:48:57,197 - #6 =
INFO  22:48:57,197 - #48 a
INFO  22:48:57,197 - #8 ;
INFO  22:48:57,197 - #12 }
INFO  22:48:57,198 - #13 void
INFO  22:48:57,198 - #48 putn
INFO  22:48:57,198 - #9 (
INFO  22:48:57,198 - #48 int
INFO  22:48:57,198 - #48 a
INFO  22:48:57,198 - #7 ,
INFO  22:48:57,199 - #48 int
INFO  22:48:57,199 - #48 idx
INFO  22:48:57,199 - #10 )
INFO  22:48:57,199 - #11 {
INFO  22:48:57,199 - #48 this
INFO  22:48:57,199 - #43 .
INFO  22:48:57,199 - #48 neg
INFO  22:48:57,200 - #38 [
INFO  22:48:57,200 - #48 idx
INFO  22:48:57,200 - #39 ]
INFO  22:48:57,200 - #6 =
INFO  22:48:57,200 - #48 a
INFO  22:48:57,200 - #8 ;
INFO  22:48:57,200 - #12 }
INFO  22:48:57,200 - #48 int
INFO  22:48:57,202 - #48 getp
INFO  22:48:57,203 - #9 (
INFO  22:48:57,203 - #48 int
INFO  22:48:57,203 - #48 idx
INFO  22:48:57,204 - #10 )
INFO  22:48:57,204 - #11 {
INFO  22:48:57,204 - #4 return
INFO  22:48:57,204 - #48 pos
INFO  22:48:57,204 - #38 [
INFO  22:48:57,205 - #48 idx
INFO  22:48:57,205 - #39 ]
INFO  22:48:57,205 - #8 ;
INFO  22:48:57,205 - #12 }
INFO  22:48:57,205 - #48 int
INFO  22:48:57,205 - #48 getn
INFO  22:48:57,205 - #9 (
INFO  22:48:57,205 - #48 int
INFO  22:48:57,205 - #48 idx
INFO  22:48:57,205 - #10 )
INFO  22:48:57,206 - #11 {
INFO  22:48:57,206 - #4 return
INFO  22:48:57,206 - #48 neg
INFO  22:48:57,206 - #38 [
INFO  22:48:57,206 - #48 idx
INFO  22:48:57,206 - #39 ]
INFO  22:48:57,206 - #8 ;
INFO  22:48:57,207 - #12 }
INFO  22:48:57,207 - #12 }
INFO  22:48:57,207 - #12 }
INFO  22:48:57,207 - #46 record
INFO  22:48:57,207 - #48 Board
INFO  22:48:57,207 - #11 {
INFO  22:48:57,207 - #48 int
INFO  22:48:57,208 - #48 rows
INFO  22:48:57,208 - #7 ,
INFO  22:48:57,208 - #48 columns
INFO  22:48:57,208 - #8 ;
INFO  22:48:57,208 - #12 }
INFO  22:48:57,208 - #48 Table
INFO  22:48:57,208 - #48 val
INFO  22:48:57,208 - #7 ,
INFO  22:48:57,209 - #48 ok
INFO  22:48:57,209 - #8 ;
INFO  22:48:57,209 - #48 Board
INFO  22:48:57,209 - #48 board
INFO  22:48:57,209 - #8 ;
INFO  22:48:57,209 - #11 {
INFO  22:48:57,209 - #13 void
INFO  22:48:57,209 - #48 f
INFO  22:48:57,210 - #9 (
INFO  22:48:57,210 - #48 char
INFO  22:48:57,210 - #48 ch
INFO  22:48:57,210 - #7 ,
INFO  22:48:57,210 - #48 int
INFO  22:48:57,210 - #48 a
INFO  22:48:57,210 - #7 ,
INFO  22:48:57,210 - #48 int
INFO  22:48:57,210 - #48 arg
INFO  22:48:57,211 - #10 )
INFO  22:48:57,211 - #48 int
INFO  22:48:57,211 - #48 x
INFO  22:48:57,211 - #8 ;
INFO  22:48:57,212 - #11 {
INFO  22:48:57,213 - #48 x
INFO  22:48:57,213 - #6 =
INFO  22:48:57,213 - #48 arg
INFO  22:48:57,213 - #8 ;
INFO  22:48:57,213 - #12 }
INFO  22:48:57,213 - #13 void
INFO  22:48:57,214 - #48 main
INFO  22:48:57,214 - #9 (
INFO  22:48:57,214 - #10 )
INFO  22:48:57,214 - #48 int
INFO  22:48:57,214 - #48 x
INFO  22:48:57,214 - #7 ,
INFO  22:48:57,214 - #48 i
INFO  22:48:57,214 - #8 ;
INFO  22:48:57,214 - #48 char
INFO  22:48:57,215 - #48 c
INFO  22:48:57,215 - #8 ;
INFO  22:48:57,215 - #11 {
INFO  22:48:57,215 - #48 val
INFO  22:48:57,215 - #6 =
INFO  22:48:57,215 - #21 new
INFO  22:48:57,215 - #48 Table
INFO  22:48:57,215 - #8 ;
INFO  22:48:57,215 - #48 val
INFO  22:48:57,215 - #43 .
INFO  22:48:57,215 - #48 pos
INFO  22:48:57,215 - #6 =
INFO  22:48:57,216 - #21 new
INFO  22:48:57,216 - #48 int
INFO  22:48:57,216 - #38 [
INFO  22:48:57,216 - #48 size
INFO  22:48:57,216 - #39 ]
INFO  22:48:57,216 - #8 ;
INFO  22:48:57,216 - #48 val
INFO  22:48:57,216 - #43 .
INFO  22:48:57,216 - #48 neg
INFO  22:48:57,216 - #6 =
INFO  22:48:57,216 - #21 new
INFO  22:48:57,216 - #48 int
INFO  22:48:57,218 - #38 [
INFO  22:48:57,218 - #48 size
INFO  22:48:57,218 - #39 ]
INFO  22:48:57,219 - #8 ;
INFO  22:48:57,219 - #31 read
INFO  22:48:57,219 - #9 (
INFO  22:48:57,219 - #48 x
INFO  22:48:57,219 - #10 )
INFO  22:48:57,219 - #8 ;
INFO  22:48:57,219 - #15 if
INFO  22:48:57,219 - #9 (
INFO  22:48:57,219 - #48 x
INFO  22:48:57,220 - #23 >
INFO  22:48:57,220 - #51 5
INFO  22:48:57,220 - #10 )
INFO  22:48:57,220 - #11 {
INFO  22:48:57,220 - #30 goto
INFO  22:48:57,220 - #48 skip
INFO  22:48:57,221 - #8 ;
INFO  22:48:57,221 - #12 }
INFO  22:48:57,221 - #48 i
INFO  22:48:57,221 - #6 =
INFO  22:48:57,221 - #51 0
INFO  22:48:57,222 - #8 ;
INFO  22:48:57,222 - #47 do
INFO  22:48:57,222 - #11 {
INFO  22:48:57,222 - #48 val
INFO  22:48:57,222 - #43 .
INFO  22:48:57,222 - #48 putp
INFO  22:48:57,222 - #9 (
INFO  22:48:57,222 - #51 0
INFO  22:48:57,223 - #7 ,
INFO  22:48:57,223 - #48 i
INFO  22:48:57,223 - #10 )
INFO  22:48:57,223 - #8 ;
INFO  22:48:57,223 - #48 val
INFO  22:48:57,223 - #43 .
INFO  22:48:57,223 - #48 putn
INFO  22:48:57,223 - #9 (
INFO  22:48:57,223 - #51 0
INFO  22:48:57,223 - #7 ,
INFO  22:48:57,224 - #48 i
INFO  22:48:57,224 - #10 )
INFO  22:48:57,224 - #8 ;
INFO  22:48:57,224 - #48 i
INFO  22:48:57,224 - #19 ++
INFO  22:48:57,224 - #8 ;
INFO  22:48:57,224 - #12 }
INFO  22:48:57,224 - #18 while
INFO  22:48:57,224 - #9 (
INFO  22:48:57,224 - #48 i
INFO  22:48:57,224 - #22 <
INFO  22:48:57,224 - #48 size
INFO  22:48:57,224 - #10 )
INFO  22:48:57,224 - #8 ;
INFO  22:48:57,224 - #48 skip
INFO  22:48:57,224 - #40 :
INFO  22:48:57,225 - #48 f
INFO  22:48:57,225 - #9 (
INFO  22:48:57,225 - #48 c
INFO  22:48:57,225 - #7 ,
INFO  22:48:57,225 - #48 x
INFO  22:48:57,225 - #7 ,
INFO  22:48:57,225 - #48 i
INFO  22:48:57,225 - #10 )
INFO  22:48:57,225 - #8 ;
INFO  22:48:57,225 - #48 board
INFO  22:48:57,225 - #6 =
INFO  22:48:57,225 - #21 new
INFO  22:48:57,225 - #48 Board
INFO  22:48:57,225 - #8 ;
INFO  22:48:57,225 - #31 read
INFO  22:48:57,226 - #9 (
INFO  22:48:57,226 - #48 board
INFO  22:48:57,226 - #43 .
INFO  22:48:57,226 - #48 rows
INFO  22:48:57,226 - #10 )
INFO  22:48:57,226 - #8 ;
INFO  22:48:57,226 - #48 x
INFO  22:48:57,226 - #6 =
INFO  22:48:57,226 - #48 board
INFO  22:48:57,226 - #43 .
INFO  22:48:57,226 - #48 rows
INFO  22:48:57,226 - #8 ;
INFO  22:48:57,226 - #47 do
INFO  22:48:57,226 - #11 {
INFO  22:48:57,227 - #15 if
INFO  22:48:57,227 - #9 (
INFO  22:48:57,227 - #48 x
INFO  22:48:57,227 - #24 <=
INFO  22:48:57,227 - #51 0
INFO  22:48:57,228 - #10 )
INFO  22:48:57,228 - #45 break
INFO  22:48:57,228 - #8 ;
INFO  22:48:57,228 - #15 if
INFO  22:48:57,229 - #9 (
INFO  22:48:57,229 - #51 0
INFO  22:48:57,229 - #24 <=
INFO  22:48:57,230 - #48 x
INFO  22:48:57,230 - #33 &&
INFO  22:48:57,231 - #48 x
INFO  22:48:57,237 - #22 <
INFO  22:48:57,237 - #48 size
INFO  22:48:57,237 - #10 )
INFO  22:48:57,237 - #11 {
INFO  22:48:57,237 - #48 val
INFO  22:48:57,237 - #43 .
INFO  22:48:57,237 - #48 putp
INFO  22:48:57,237 - #9 (
INFO  22:48:57,237 - #48 val
INFO  22:48:57,237 - #43 .
INFO  22:48:57,237 - #48 getp
INFO  22:48:57,237 - #9 (
INFO  22:48:57,238 - #48 x
INFO  22:48:57,238 - #10 )
INFO  22:48:57,238 - #5 +
INFO  22:48:57,238 - #51 1
INFO  22:48:57,238 - #10 )
INFO  22:48:57,238 - #8 ;
INFO  22:48:57,238 - #12 }
INFO  22:48:57,238 - #16 else
INFO  22:48:57,238 - #15 if
INFO  22:48:57,238 - #9 (
INFO  22:48:57,238 - #37 -
INFO  22:48:57,238 - #48 size
INFO  22:48:57,238 - #22 <
INFO  22:48:57,238 - #48 x
INFO  22:48:57,238 - #33 &&
INFO  22:48:57,238 - #48 x
INFO  22:48:57,238 - #22 <
INFO  22:48:57,238 - #51 0
INFO  22:48:57,239 - #10 )
INFO  22:48:57,239 - #11 {
INFO  22:48:57,239 - #48 val
INFO  22:48:57,239 - #43 .
INFO  22:48:57,239 - #48 putn
INFO  22:48:57,239 - #9 (
INFO  22:48:57,239 - #48 val
INFO  22:48:57,239 - #43 .
INFO  22:48:57,239 - #48 getn
INFO  22:48:57,239 - #9 (
INFO  22:48:57,239 - #37 -
INFO  22:48:57,239 - #48 x
INFO  22:48:57,239 - #10 )
INFO  22:48:57,239 - #5 +
INFO  22:48:57,239 - #51 1
INFO  22:48:57,240 - #10 )
INFO  22:48:57,240 - #8 ;
INFO  22:48:57,240 - #12 }
INFO  22:48:57,240 - #31 read
INFO  22:48:57,240 - #9 (
INFO  22:48:57,240 - #48 x
INFO  22:48:57,241 - #10 )
INFO  22:48:57,241 - #8 ;
INFO  22:48:57,241 - #12 }
INFO  22:48:57,241 - #18 while
INFO  22:48:57,241 - #9 (
INFO  22:48:57,242 - #50 true
INFO  22:48:57,242 - #10 )
INFO  22:48:57,242 - #8 ;
INFO  22:48:57,242 - #3 print
INFO  22:48:57,242 - #9 (
INFO  22:48:57,242 - #48 a
INFO  22:48:57,242 - #38 [
INFO  22:48:57,242 - #48 x
INFO  22:48:57,242 - #39 ]
INFO  22:48:57,242 - #7 ,
INFO  22:48:57,242 - #51 5
INFO  22:48:57,242 - #10 )
INFO  22:48:57,242 - #8 ;
INFO  22:48:57,242 - #12 }
INFO  22:48:57,243 - #12 }
